/****************************************************************** 
	Licensed Materials - Property of IBM

	5698-WSE
	(C) Copyright IBM Corp. 2014-2015 All Rights Reserved.
	US Government Users Restricted Rights - Use, duplication,
	or disclosure restricted by GSA ADP Schedule Contract with
	IBM Corp.

*******************************************************************/
var Step = require('../Step');

/**
    Creates a Java Batch step.
    
    @constructor
    @param {string} agent - Agent name
*/
function JavaBatchStep( agent ) {
    Step.call(this);
    
    this.type = "jsr352javabatch";
    this.target = agent;
}

JavaBatchStep.HTTP_protocol = "HTTP";
JavaBatchStep.HTTPS_protocol = "HTTPS";

/**
 * Java Batch connection parameters.
 
 * @typedef {object} connection_param
 * @property {string} hostname -  Java Batch application server hostname.
 * @property {number} port - Java Batch application server port number.
 * @property {string} protocol - Java Batch application server protocol. 
 * @property {string} userName - Java Batch application server port user name.
 * @property {string} password - Java Batch application server password.
 * @property {string} keyStoreFilePath - keystore file path.
 * @property {string} keyStorePassword - keystore file password.
 * @property {boolean} HostnameVerifyCheckbox - If true, the Web server name must match exactly the URL.
 * @property {number} NumberOfRetries - number of times the program retries the operation.
 * @property {number} RetryIntervalSeconds - seconds the program waits before retrying the operation.
 */

 JavaBatchStep.prototype.setConnection = function( connection_param ) {
    var props = this.properties;
    
    props.hostname = connection_param.hostname;
    props.port = connection_param.port;
    props.protocol = connection_param.protocol || JavaBatchStep.HTTPS_protocol;
    props.userName = connection_param.userName || "";
    props.password = connection_param.password || "";
    props.keyStoreFilePath = connection_param.keyStoreFilePath || "";
    props.keyStorePassword = connection_param.keyStorePassword || "";
    props.HostnameVerifyCheckbox = connection_param.HostnameVerifyCheckbox==null ? true :  connection_param.HostnameVerifyCheckbox;
    props.NumberOfRetries = connection_param.NumberOfRetries || 0 ;
    props.RetryIntervalSeconds = connection_param.RetryIntervalSeconds || 30;

    return this;
};

 
/**
 * Java Batch action parameters.
 
 * @typedef {object} action_param
 * @property {string} applicationname - Java batch application name.
 * @property {string} modulename - WAR file name. 
 * @property {string} jobxmlname - XML file name.
 * @property {string} componentname - EJB component name.
 * @property {object} jobparameters - Job parameters.
 */


JavaBatchStep.prototype.setAction = function( action_param ) {
    var props = this.properties;
    
    props.applicationname = action_param.applicationname;	
    props.modulename = action_param.modulename || "";
    props.jobxmlname = action_param.jobxmlname;
    props.componentname = action_param.componentname || "";
    props.jobparameters = ObjectToArray(action_param.jobparameters);

    return this;
};

function ObjectToArray(parametersObject){

	var parametersArray = [];
	var index=0;
	
	for (key in parametersObject) {
		parametersArray[index]=[key,parametersObject[key]];
		index++;
	}
	return parametersArray;
}


module.exports = JavaBatchStep;
